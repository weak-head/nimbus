# Observability Configuration (Optional)
observability:
  # Operation Reports (Optional)
  reports:
    format: txt  # Report file format
    directory: ~/.nimbus/reports  # Report file directory

  # Logging Settings (Optional)
  logs:
    level: WARNING  # Options: DEBUG | INFO | WARNING | ERROR | CRITICAL
    stdout: true    # Enable logging to console
    directory: ~/.nimbus/logs  # Log file directory

  # Notifications (Optional)
  notifications:
    # Discord Notifications (Optional)
    discord:
      webhook: https://discord.com/api/webhooks/id/token  # Discord webhook
      username: nimbus # Optional: Override the default username of the webhook
      avatar_url: http://avatar.picture/url # Optional: Override the default avatar of the webhook

# Profiles Collection
profiles:
  # Archival Profiles
  archive:
    - name: rar_default
      provider: rar
    - name: rar_protected
      provider: rar
      password: SecretPwd  # Optional: Archive password
      recovery: 3  # Optional: Recovery data percentage
      compression: 1  # Optional: Compression level (0-5)

  # Uploader Profiles
  upload:
    - name: aws_store
      provider: aws
      access_key: XXXXXXX
      secret_key: XXXXXXXXXXXXX
      bucket: aws.storage.bucket
      storage_class: STANDARD  # Options: STANDARD | INTELLIGENT_TIERING | DEEP_ARCHIVE
    - name: aws_archival
      provider: aws
      access_key: XXXXXXX
      secret_key: XXXXXXXXXXXXXX
      bucket: aws.archival.bucket
      storage_class: DEEP_ARCHIVE

# Command Configuration
commands:
  # Service Deployment
  deploy:
    # Service Discovery
    services:
      - ~/services
      - /mnt/ssd/services

    # Secrets Configuration Mapping (Optional)
    secrets:
      - service: "*"  # Match any service
        environment:
          UID: 1001
          GID: 1001
          TZ: America/New_York
          SMTP_SERVER: smtp.server.com
          SMTP_PORT: 587
          SMTP_USERNAME: username
          SMTP_PASSWORD: password
          SMTP_DOMAIN: domain.com
      - service: "git*"  # Match services starting with 'git'
        environment:
          UID: 1002  # Overwrite UID
          GID: 1002  # Overwrite GID
      - service: "gitlab"  # Match 'gitlab' service
        environment:
          GITLAB_HTTP_PORT: 8080
          GITLAB_SSH_PORT: 8022

  # Data Backup
  backup:
    destination: /mnt/backups
    archive: rar_protected # Archival Profile
    upload: aws_archival # Optional: Uploader Profile
    directories:
      apps:
        - /mnt/ssd/apps/gitlab
        - /mnt/ssd/apps/nextcloud
        - /mnt/ssd/apps/plex
      media:
        - ~/Music
        - ~/Videos
        - /mnt/hdd/music
        - /mnt/hdd/books
      photos:
        - ~/Photos
        - /mnt/hdd/photos
      docs:
        - ~/Documents
