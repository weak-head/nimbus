[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nimbus"
version = "0.1.0"
description = "Nimbus is engineered to optimize data backup processes and efficiently orchestrate service deployments."
keywords = ["backup", "deploy", "administration"]
authors = ["Oleksandr Zinchenko <zinchenko@live.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.12"
boto3 = "^1.34"
pyyaml = "^6.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^7.0.0"
flake8-pyproject = "^1.2.3"
black = "^24.2.0"
isort = "^5.13.2"
pylint = "^3.0.3"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.1"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.2.0"

[tool.poetry.scripts]
ni = "nimbus.main:main"

[tool.coverage.run]
branch = true

[tool.coverage.report]
skip_empty = true
ignore_errors = true
exclude_also = [
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    ]

[tool.coverage.html]
directory = "coverage"

[tool.black]
line-length = 119

[tool.flake8]
max-line-length = 119
per-file-ignores = """
    __init__.py: F401
"""

[tool.isort]
profile = "black"

[tool.pylint.message_control]
max-line-length = 119
disable = """
    too-few-public-methods,
    too-many-arguments,
    too-many-instance-attributes,
    too-many-locals,
    too-many-return-statements,
    unused-argument,
    not-callable,
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
"""
